{"version":3,"sources":["component/CustomTextBox.js","component/CustomButton.js","component/CustomDatePicker.js","component/CustomListItem.js","component/HeaderPanel.js","component/CustomList.js","component/CustomChart.js","pages/ActivityPage.js","App.js","index.js"],"names":["CustomTextBox","state","label","value","handleOnChange","event","setState","target","console","log","props","style","textFieldStyle","TextField","id","this","margin","onChange","e","React","Component","CustomButton","Button","buttonStyle","variant","color","onClick","clickHandle","CustomDatePicker","selectedDate","getFormattedDate","Date","handleDateChange","date","datePicketStyle","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","getFullYear","getMonth","getDate","CustomListItem","itemList","map","item","className","styel","itemStyle","activityName","activityValue","startDate","endDate","duration","durationValue","activityCost","activityCostValue","handleDelete","bind","border","HeaderPanel","CustomList","selectValue","handleSelectOnChange","InputLabel","htmlFor","listLabel","marginTop","Select","selectStyle","MenuItem","height","minWidth","CustomChart","getChartData","bcwp","chartData","bcws","acwp","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Math","max","getReport","reportStyle","width","options","maintainAspectRatio","maxWidth","maxHeight","ActivityPage","now","startDateValue","endDateValue","activityType","progressDate","progressList","activity","plannedDuration","completed","actualCost","actualDuration","plannedCost","cpi","cv","spi","sv","enableReport","handleButtonClick","addItem","list","push","filter","listItem","showReport","handleTextViewOnChange","project","textboxName","dateLabel","toString","getDateDifference","round","parse","handleSingleDate","updatePlannedCost","getDurationSum","getTotalActivityCost","toFixed","progressItem","forEach","getPlannedDuration","getFirstDateFromActivities","itemCount","length","i","cost","parseInt","updatePlannedDuration","handleProcess","findEvaIndicators","setEvaIndicators","updateBcws","updateBcwp","updateAcwp","updateCpi","updateCv","updateSpi","updateSv","totalDuration","totalCost","handleCompletedTextChange","handleActualCostTextChange","handleActualDurationTextChange","projectData","Card","customListStyle","progressPanelStyle","display","evaIndicatorStyle","padding","justifyContent","alignItems","App","currency","exact","path","render","topPanelStyle","cardStyle","Fragment","currencyList","currencyStyle","to","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c5502fc1.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass CustomTextBox extends React.Component{\n\t\n\tconstructor(){\n\t\tsuper();\n\t\tconsole.log(this.props);\n\t\t\n\t}\n\tstate = {\n\t\tlabel: '',\n\t\tvalue: ''\n\t}\n\n\thandleOnChange = (event) => {\n\t\treturn this.setState({value: event.target.value});\n  \t}\n\t\n\trender(){\n\n\t\treturn (\n\t\t\t<div style = {textFieldStyle}>\n\t\t\t    <TextField\n\t\t\t        id=\"projectName\"\n\t\t\t        label= {this.props.label}\n\t\t\t        value = {this.props.value}\n\t\t\t        margin=\"normal\"\n\t\t\t        onChange = {(e) => this.props.handleOnChange(e.target.value)}>\n\t\t\t   \t</TextField>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst textFieldStyle = {\n\tmargin: '10px'\n}\n\n  \nexport default CustomTextBox;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n\nclass CustomButton extends React.Component{\n\tstate = {\n\t\tlabel : 'Submit'\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t    <Button style = {buttonStyle} variant=\"contained\" color=\"primary\" onClick = {this.props.clickHandle}>\n      \t\t\t\t{this.props.label}\n      \t\t\t</Button>\t\t\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst buttonStyle = {\n\tmargin: '10px'\n}\n\nexport default CustomButton;","import React from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nclass CustomDatePicker extends React.Component{\n\t\n\tstate = {\n\t\tselectedDate: CustomDatePicker.getFormattedDate(new Date())\n\t}\n\n\thandleDateChange = (e) => {\n\t\tconst date = CustomDatePicker.getFormattedDate(e);\n\t\tthis.props.handleDateChange(date);\n\t\treturn this.setState({selectedDate: date});\n  \t}\n\n  \tstatic getFormattedDate(date){\n  \t\treturn + date.getFullYear()+ \"-\" + (date.getMonth() + 1)+\"-\"+date.getDate();\n  \t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div style = {datePicketStyle}>\n   \t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n      \t\t\t\t<Grid container  justify=\"space-around\">\n   \t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t          disableToolbar\n\t\t\t\t          variant=\"normal\"\n\t\t\t\t          format=\"dd/MM/yyyy\"\n\t\t\t\t          margin=\"normal\"\n\t\t\t\t          value = {this.state.selectedDate}\n\t\t\t\t          onChange = {this.handleDateChange}\n\t\t\t\t          id={this.props.label}\n\t\t\t\t          label={this.props.label}\n\t\t\t\t    \t   \t\n\t\t\t\t        />\n\t\t\t\t\t</Grid>\n    \t\t\t</MuiPickersUtilsProvider>\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst datePicketStyle = {\n\tmargin: '10px'\n}\nexport default CustomDatePicker;","import React from 'react';\nimport './../App.css';\nimport CustomTextBox from './CustomTextBox';\nimport CustomDatePicker from './CustomDatePicker';\nimport CustomButton from './CustomButton'\n// import CustomList from './CustomList'\n\nclass CustomListItem extends React.Component{\n\n\trender(){\n\t\treturn this.props.itemList.map(item =>(\n\t\t\t<div className='Activity-panel'>\n\n            \t<CustomTextBox styel= {itemStyle} label = {item.activityName}\n                  value = {item.activityValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.activityName)}/>\n\n            \t<CustomDatePicker label = {item.startDate} \n            \thandleDateChange = {(e) => this.props.handleDateChange(e, item, item.startDate)} />\n            \t<CustomDatePicker label = {item.endDate} \n            \thandleDateChange = {(e) => this.props.handleDateChange(e, item, item.endDate)}/>\n            \t\n            \t<CustomTextBox label = {item.duration} value = {item.durationValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.duration)}/>\n            \t\n            \t<CustomTextBox label = {item.activityCost} value = {item.activityCostValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.activityCost)}/>\n\n            \t<CustomButton label = {'Delete'} justify=\"space-around\" \n            \tclickHandle = { this.props.handleDelete.bind(this, item) }/>\n            </div>\n\t\t))\n\t}\n}\n\nconst itemStyle = {\n      margin: '10px 10px 10px 10px',\n      border: '1px'\n}\n\nconst activityTypeList = ['Months', 'Days']\n  \nexport default CustomListItem;","import React from 'react';\n\nclass HeaderPanel extends React.Component{\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t    <h1> EVA Application </h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HeaderPanel;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n//select \nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass CustomList extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\tstate = {\n\t\tselectValue: 'none'\n\t}\n\n\thandleSelectOnChange = (e) =>{\n\t\tthis.props.handleSelectOnChange(e);\n\t\treturn this.setState({selectValue: e.target.value});\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t <div>\n\t\t\t<InputLabel htmlFor=\"Currency\">{this.props.listLabel}</InputLabel>\n\t\t\t<div className = {marginTop}></div>\n\t\t\t<Select  style = {selectStyle}\n\t\t\tvalue={this.state.selectValue}\n\t\t\tonChange = {this.handleSelectOnChange}>\n\t\t\t <MenuItem value=\"none\">\n\t           None\n\t         </MenuItem>\n\t\t\t\t{\n\t\t\t\t\tthis.props.itemList.map(item => (\n\t\t\t\t\t\t<MenuItem value={item}>{item}</MenuItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t        </Select>\n\t        </div>\n\t        \n\t\t)\n\t}\n}\n\nconst marginTop = {\n\theight: '10px',\n\tmarginTop: '100px'\n}\n\nconst selectStyle = {\n\tminWidth:'175px'\n}\n\n\nexport default CustomList;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass CustomChart extends React.Component{\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tconsole.log(\"CustomChart props:\"+props);\n\t}\n\n\tgetChartData =()=> {\n\t\tconst bcwp = this.props.chartData.bcwp;\n\t\tconst bcws = this.props.chartData.bcws;\n\t\tconst acwp = this.props.chartData.acwp;\n\t\tconst max = Math.max(bcwp, bcws, acwp) + 50;\n\t\tconst min = 0;\n\t  return ({\n\t  \tlabels: ['bcws','bcwp', 'acwp'],\n\t\t  datasets: [\n\t\t    {\n\t\t      label: 'EVA Graph',\n\t\t      backgroundColor: 'rgba(255,99,132,0.2)',\n\t\t      borderColor: 'rgba(255,99,132,1)',\n\t\t      borderWidth: 1,\n\t\t      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t      hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t      data: [bcws, bcwp, acwp, min, max]\n\t\t    }\n\t\t  ]\n\t\t})\n\t  }\n\n\t  getReport = () => {\n\t\t\treturn <div style = {reportStyle}>\n\t\t\t\t<Bar data={this.getChartData()} \n\t\t\t\twidth= {20}\n\t\t\t\theight= {20}\n\t\t\t\toptions={{ maintainAspectRatio: true }}/>\n\t\t\t</div>\n\t  }\n\n\trender(){\n\t\treturn (\n\t\t\tthis.getReport()\t\t\t\t\t\t\n\t\t);\n\t}\n}\n\nconst reportStyle = {\n\tmaxWidth: '300px',\n\tmaxHeight: '300px'\n}\n\nexport default CustomChart;","import React from 'react';\nimport '../App.css';\nimport CustomButton from '../component/CustomButton';\nimport CustomListItem from '../component/CustomListItem';\nimport HeaderPanel from '../component/HeaderPanel';\nimport CustomDatePicker from '../component/CustomDatePicker';\nimport CustomTextBox from '../component/CustomTextBox';\nimport CustomChart from '../component/CustomChart';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nclass ActivityPage extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tconst projectData = props.projectData;\n\t}\n\n\tstate = {\n\t\titemList : [{\n\t\t\t\tid: Date.now(),\n\t\t\t\tactivityName: 'Activity Name',\n\t\t\t\tactivityValue: '',\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartDateValue: CustomDatePicker.getFormattedDate(new Date()),\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendDateValue:  CustomDatePicker.getFormattedDate(new Date()),\n\t\t\t\tduration: 'Duration(Days)',\n\t\t\t\tdurationValue: 0,\n\t\t\t\tactivityCost: 'Activity Cost',\n\t\t\t\tactivityCostValue: 0,\n\t\t\t\tactivityType: ''\n\n\t\t\t}],\n\t\tprogressDate : CustomDatePicker.getFormattedDate(new Date()),\n\t\tprogressList: {\n\t\t\tactivity: '',\n\t\t\tplannedDuration: 0,\n\t\t\tcompleted: '',\n\t\t\tactualCost: '',\n\t\t\tactualDuration: '',\n\t\t\tplannedCost: ''\n\t\t},\n\t\tbcws: 0,\n\t\tbcwp: 0,\n\t\tacwp: 0,\n\t\tcpi: 0,\n\t\tcv: 0,\n\t\tspi: 0,\n\t\tsv: 0,\n\t\tenableReport: false\n\t}\n\t\n\thandleButtonClick = (e) => {\n\t\tthis.addItem();\n\t}\n\n\taddItem = (e) => {\n\t\tthis.setState(state => {\n\t\t\tconst list = state.itemList.push({\n\t\t\t\tid: Date.now(),\n\t\t\t\tactivityName: 'Activity Name',\n\t\t\t\tactivityValue: '',\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartDateValue:  CustomDatePicker.getFormattedDate(new Date()),\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendDateValue:  CustomDatePicker.getFormattedDate(new Date()),\n\t\t\t\tduration: 'Duration(Days)',\n\t\t\t\tdurationValue: 0,\n\t\t\t\tactivityCost: 'Activity Cost',\n\t\t\t\tactivityCostValue: 0,\n\t\t\t\tactivityType: ''\n\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleDelete = (item) => {\n\t\tconsole.log(item);\n\t\tthis.setState({ itemList: [...this.state.itemList.filter(listItem => listItem !== item)]});\t\n\t}\n\n\tshowReport = (e) => {\n\t\treturn this.setState({ enableReport: !this.state.enableReport });\n\t}\n\n\thandleTextViewOnChange = (e) => {\n\t\tthis.setState( {\n\t\t\tproject : e\n\t\t});\n\t}\n\n\thandleOnChange = (e, item, textboxName) => {\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tif(textboxName === 'Activity Name'){\n\t\t\t\t\t\tlistItem.activityValue = e;\n\t\t\t\t\t\tstate.progressList.activity = e;\n\t\t\t\t\t}else if(textboxName === 'Duration'){\n\t\t\t\t\t\tlistItem.durationValue = e;\n\t\t\t\t\t}else if(textboxName === 'Activity Cost'){\n\t\t\t\t\t\tlistItem.activityCostValue = e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleDateChange = (e, item, dateLabel) =>{\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tif(dateLabel === 'Start Date'){\n\t\t\t\t\t\tlistItem.startDateValue = e.toString();\n\t\t\t\t\t}else if(dateLabel === 'End Date'){\n\t\t\t\t\t\tlistItem.endDateValue = e.toString();\t\n\t\t\t\t\t}\n\t\t\t\t\tconst duration = this.getDateDifference(listItem.startDateValue,\n\t\t\t\t\t\tlistItem.endDateValue);\n\t\t\t\t\tlistItem.durationValue = Math.round(duration/(1000 * 3600 * 24)) + 1;\n\t\t\t\t}\n\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\tgetDateDifference = (startDate, endDate) => {\n\t\treturn Date.parse(endDate) - Date.parse(startDate);\n\t}\n\n\thandleSelectOnChange = (e, item) => {\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tlistItem.activityType = e.target.value;\n\t\t\t\t}\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleSingleDate = (e) => {\n\t\tthis.setState(state =>{ \n\t\t\tstate.progressDate = e.toString();\n\t\t});\n\t\t\n\t}\n\n\tupdatePlannedCost = (plannedDuration) => {\n\t\tvar plannedCost = ((plannedDuration / this.getDurationSum()) * this.getTotalActivityCost()).toFixed(4);\n\t\tthis.setState(state => {\n\t\t\tconst progressItem = state.progressList;\n\t\t\tprogressItem.plannedCost = plannedCost;\n\t\t\treturn progressItem;\n\t\t} );\n\t\treturn plannedCost;\n\t}\t\n\n\tgetDurationSum = () => {\n\t\tvar duration = 0;\n\t\tthis.state.itemList.forEach((item) => {\n\t\t\tduration += item.durationValue;\n\t\t});\n\t\treturn duration;\n\t}\n\n\n\tgetPlannedDuration = () => {\n\t\tconst startDate = this.getFirstDateFromActivities();\n\t\tvar duration = this.getDateDifference(startDate.toString(), this.state.progressDate);\n\t\treturn Math.round(duration/(1000 * 3600 * 24)) + 1;\n\t}\n\n\tgetFirstDateFromActivities = () => {\n\t\tvar startDate = new Date(this.state.itemList[0].startDateValue);\n\t\tconst itemCount = this.state.itemList.length;\n\t\tfor(var i = 1; i < itemCount; i++){\n\t\t\tvar date = new Date(this.state.itemList[i].startDateValue)\n\t\t\tif(date < startDate){\n\t\t\t\tstartDate = date;\n\t\t\t}\n\t\t}\n\t\treturn startDate;\n\t}\n\n\tgetTotalActivityCost = () => {\n\t\tvar cost = 0;\n\t\tthis.state.itemList.forEach(item => {\n\t\t\tcost += parseInt(item.activityCostValue);\n\t\t});\n\t\treturn cost;\n\t}\n\n\tupdatePlannedDuration = (e) => {\n\t\tconst plannedDuration = this.getPlannedDuration();\n\t\tthis.setState( state => {\n\t\t\tconst progressItem = state.progressList;\n\t\t\tprogressItem.plannedDuration = plannedDuration;\n\t\t\treturn progressItem;\n\t\t});\n\t\treturn plannedDuration;\n\t}\n\n\thandleProcess = (e) => {\n\t\tconst plannedDuration = this.updatePlannedDuration();\n\t\tthis.updatePlannedCost(plannedDuration);\n\t}\n\n\tfindEvaIndicators = () => {\n\t\tthis.setEvaIndicators();\n\t}\n\n\tsetEvaIndicators = (e) => {\n\t\tconst bcws = this.updateBcws();\n\t\tconst bcwp = this.updateBcwp();\n\t\tconst acwp = this.updateAcwp();\n\t\tconst cpi = this.updateCpi(bcwp, acwp);\n\t\tconst cv = this.updateCv(bcwp, acwp);\n\t\tconst spi = this.updateSpi(bcwp, bcws);\n\t\tconst sv = this.updateSv(bcwp, bcws);\n\t}\n\n\tupdateBcws = (e) => {\n\t\tconst plannedDuration = this.state.progressList.plannedDuration;\n\t\tconsole.log(\"plannedDuration :\"+plannedDuration);\n\t\t\n\t\tconst totalDuration = this.getDurationSum();\n\t\tconsole.log(\"totalDuration :\"+totalDuration);\n\t\t\n\t\tconst totalCost = this.getTotalActivityCost();\n\t\tconsole.log(\"totalCost :\"+totalCost);\n\n\t\tconst bcws = ((plannedDuration/totalDuration) * totalCost).toFixed(4);\t\n\n\t\tthis.setState({bcws: bcws});\n\n\t\treturn bcws;\n\t}\n\n\tupdateBcwp = () => {\n\t\tconst bcwp = this.getTotalActivityCost();\n\t\tthis.setState({bcwp: bcwp});\n\t\treturn bcwp;\t\n\t}\n\n\tupdateAcwp = () => {\n\t\tconst acwp = this.state.progressList.actualCost;\n\t\tthis.setState({acwp: acwp});\n\t\treturn acwp;\n\t}\n\n\tupdateCpi = (bcwp, acwp) => {\n\t\tconst cpi = bcwp / acwp;\t\n\t\tthis.setState({cpi: cpi.toFixed(4)});\n\t\treturn cpi;\n\t}\n\n\tupdateCv = (bcwp, acwp) => {\n\t\tconst cv = bcwp - acwp;\t\n\t\tthis.setState({cv: cv});\n\t\treturn cv;\n\t}\n\n\tupdateSpi = (bcwp, bcws) => {\n\t\tconst spi = (bcwp / bcws).toFixed(4);\t\n\t\tthis.setState({spi: spi});\n\t\treturn spi;\n\t}\n\n\tupdateSv = (bcwp, bcws) => {\n\t\tconst sv = bcwp - bcws;\t\n\t\tthis.setState({sv: sv});\n\t\treturn sv;\n\t}\n\n\thandleCompletedTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.completed = e;\n\t\t});\n\t}\n\n\thandleActualCostTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.actualCost = e;\n\t\t});\n\t}\n\n\thandleActualDurationTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.actualDuration = e;\n\t\t});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className = 'activityLayout'>  \n\n\t\t\t\t<Card style = {customListStyle}>\n\t\t\t\t\t<div>Activity Info</div>\n\t\t            <CustomListItem itemList = {this.state.itemList} \n\t\t            handleDelete = {this.handleDelete}\n\t\t            handleOnChange = {this.handleOnChange}\n\t\t            handleDateChange = {this.handleDateChange}\n\t\t            handleSelectOnChange = {this.handleSelectOnChange}/>\n\n\t\t\t        <CustomButton label = {'Add Activity'} clickHandle={this.handleButtonClick} />\n\t\t        </Card>\n\t\t        \n\t\t        <Card style = {progressPanelStyle}>\n\t\t        \t<div>Check Progress</div>\n\t\t        \t<div style = {{maxWidth: '600px', display: 'inline-block'}}>\n\t\t\t        \t<div className = 'Activity-panel'>\n\t\t\t\t\t         <CustomDatePicker label = {'Check Progress till date'} handleDateChange = {this.handleSingleDate}/>\n\t\t\t\t\t         <CustomButton label = {'Check Progress'} clickHandle={this.handleProcess} />\t   \n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        </Card>\n\n\t\t        <Card style = {customListStyle}>\n\t\t        \t<div>Progress Info</div>\n\t\t\t         <div className='Activity-panel'>\n\t\t\t         \t<CustomTextBox label = {'Planned Duration'} value = {this.state.progressList.plannedDuration}\n\t\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\n\t\t\t         \t<CustomTextBox label = {'% Completed'} handleOnChange = {this.handleCompletedTextChange}/>\n\t\t\t         \t<CustomTextBox label = {'Actual Cost'} handleOnChange = {this.handleActualCostTextChange}/>\n\t\t\t         \t<CustomTextBox label = {'Actual Duration'} handleOnChange = {this.handleActualDurationTextChange}/>\n\t\t\t         \t<CustomTextBox label = {'Planned Cost'} value = {this.state.progressList.plannedCost} \n\t\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\t\n\t\t\t         </div>\n\t\t         </Card>\n\n\t\t         <CustomButton style = {{maxWidth: '600px', display: 'inline-block'}} label = {'Find EVA Indicators'} clickHandle={this.findEvaIndicators} />\n\t\t\t        <Card style = {evaIndicatorStyle}>\n\t\t\t        \t<div>EVA Indicators</div>\n\t\t\t\t         <div className='Activity-panel'>\t\n\n\t\t\t\t\t         <CustomTextBox label = {'bcws'} \n\t\t\t\t\t         value = {this.state.bcws}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'bcwp'} \n\t\t\t\t\t         value = {this.state.bcwp}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'acwp'} \n\t\t\t\t\t         value = {this.state.acwp}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'cpi'} \n\t\t\t\t\t         value = {this.state.cpi}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'cv'} \n\t\t\t\t\t         value = {this.state.cv}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'spi'} \n\t\t\t\t\t         value = {this.state.spi}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'sv'} \n\t\t\t\t\t         value = {this.state.sv}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t         </div>\n\t\t\t         </Card>\n\t\t\t     <Card style = {evaIndicatorStyle}>\n\t\t\t     \t<div style = {{width: '300px', height: '100%',display: 'inline-block'}}>\n\t\t\t     \t\t<CustomChart chartData = {this.state}/>\n\t\t\t     \t</div>\n\t\t\t     </Card>\n\t\t\t         \n\t\t        \n\t      \t</div>\n\t\t      \n\t\t);\n\t}\n}\n\nconst customListStyle = {\n\t\tmarginTop: '10px',\n\t    display: 'inline-block',\n\t\tmaxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around'\n}\n\nconst evaIndicatorStyle = {\n\t    display: 'inline-block',\n\t    maxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center'\n}\nconst progressPanelStyle = {\n\t\tmarginTop: '10px',\n\t    display: 'inline-block',\n\t\tmaxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center'\n}\n\nconst activityLayout = {\n\t\tmarginTop: '10px',\n\t    display: 'inline-block',\n\t\tmaxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center'\n}\n\n\n\nexport default ActivityPage;\n","import React from 'react';\nimport './App.css';\nimport CustomTextBox from './component/CustomTextBox';\nimport CustomButton from './component/CustomButton';\nimport CustomDatePicker from './component/CustomDatePicker';\nimport CustomListItem from './component/CustomListItem';\nimport HeaderPanel from './component/HeaderPanel';\n\nimport CustomList from './component/CustomList';\nimport ActivityPage from './pages/ActivityPage';\n// list\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// card\nimport Card from '@material-ui/core/Card';\n\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tproject : '',\n\t\tcurrency : '',\n\t\tstartDate: new Date().toString()\n\t}\n\n\t\n\thandleTextViewOnChange = (e) => {\n\t\treturn this.setState( {\n\t\t\tproject : e\n\t\t});\n\t}\n\n\thandleDateChange = (e) =>{\n\t\tconsole.log(e);\n\t\treturn this.setState( {\n\t\t\tstartDate : e.toString()\n\t\t});\n\t}\n\n\thandleSelectOnChange = (e) => {\n\t\treturn this.setState({currency: e.target.value});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t\n\t\t      <div className='App'>\t\t      \t\t\n\t\t\t  \t<HeaderPanel />\n\t\t    \t<Router>\n\t\t\t        <Route exact path = '/EVA-App' render = {props => (\n\t\t\t        \t<div style = {topPanelStyle}>\n\t\t      \t\t\t<Card style = {cardStyle}>\n\t\t\t\t        \t<React.Fragment>\n\t\t\t\t        \t\t<div className='App-header'>\n\t\t\t\t\t            <CustomTextBox label = {'Project Name'} handleOnChange = {this.handleTextViewOnChange}/>\n\t\t\t\t\t            <CustomList itemList = {currencyList} listLabel = {'Currency'} style = {currencyStyle}\n\t\t\t\t\t            handleSelectOnChange = {this.handleSelectOnChange} />\n\t\t\t\t\t            <CustomDatePicker label = {'Start Date'} handleDateChange = {this.handleDateChange}/>\n\t\t\t\t\t            <Link to='/EVA-App/activity' >\n\t\t\t\t\t            \t<CustomButton label = {'Next'} />\n\t\t\t\t\t            </Link>\n\t\t\t\t        \t\t</div>\n\t\t\t\t        \t</React.Fragment>\t\n\t\t\t        \t</Card>\n\t\t        \t\t</div>\n\t\t\t        )}/>\n\t\t        \t<Route exact path = '/EVA-App/activity' \n\t\t        \t\trender = {(props) => <ActivityPage {...props} projectData = {this.state}/>} />\n\t        \t</Router>\t\t        \n\t\t      </div>\n\t\t      \n\t\t);\n\t}\n}\nconst currencyList = ['INR','USD'];\n\nconst cardStyle = {\n\twidth: '400px',\n\tminWidth: '300px',\n\tmaxHeight: '400px',\n\t\n}\nconst currencyStyle = {\n\twidth: '200px'\n}\n\nconst topPanelStyle = {\n\ttextAlign: 'center',\n\tdisplay: 'inline-block'\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CustomTextBox from './component/CustomTextBox';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}