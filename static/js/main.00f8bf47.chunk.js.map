{"version":3,"sources":["component/CustomTextBox.js","component/CustomButton.js","component/CustomDatePicker.js","component/CustomListItem.js","component/HeaderPanel.js","component/CustomList.js","component/CustomChart.js","pages/ActivityPage.js","App.js","index.js"],"names":["CustomTextBox","state","label","value","handleOnChange","event","setState","target","console","log","props","style","textFieldStyle","TextField","id","this","margin","onChange","e","React","Component","CustomButton","Button","buttonStyle","variant","color","onClick","clickHandle","CustomDatePicker","selectedDate","Date","handleDateChange","date","getFormattedDate","getFullYear","getMonth","getDate","datePicketStyle","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","CustomListItem","itemList","map","item","className","styel","itemStyle","activityName","activityValue","startDate","endDate","duration","durationValue","activityCost","activityCostValue","handleDelete","bind","border","HeaderPanel","CustomList","selectValue","handleSelectOnChange","InputLabel","htmlFor","listLabel","marginTop","Select","selectStyle","MenuItem","height","minWidth","CustomChart","getChartData","bcwp","chartData","bcws","acwp","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Math","max","getReport","enableReport","reportStyle","options","maintainAspectRatio","maxWidth","maxHeight","ActivityPage","now","startDateValue","endDateValue","activityType","progressDate","toString","progressList","activity","plannedDuration","completed","actualCost","actualDuration","plannedCost","cpi","cv","spi","sv","handleButtonClick","addItem","list","push","filter","listItem","showReport","handleTextViewOnChange","project","textboxName","dateLabel","getDateDifference","round","parse","handleSingleDate","updatePlannedCost","getTotalDuration","getTotalActivityCost","progressItem","forEach","cost","parseInt","setPlannedDuration","getPlannedDuration","plannedDurationDiff","projectData","handleProcess","handleCheckProgressClick","findEvaIndicators","setBcws","setBcwp","setAcwp","setCpi","setCv","setSpi","setSv","totalDuration","totalCost","acws","handleCompletedTextChange","handleActualCostTextChange","handleActualDurationTextChange","Card","customListStyle","progressPanelStyle","display","evaIndicatorStyle","width","padding","justifyContent","alignItems","App","currency","exact","path","render","topPanelStyle","cardStyle","Fragment","currencyList","currencyStyle","to","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.00f8bf47.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass CustomTextBox extends React.Component{\n\t\n\tconstructor(){\n\t\tsuper();\n\t\tconsole.log(this.props);\n\t\t\n\t}\n\tstate = {\n\t\tlabel: '',\n\t\tvalue: ''\n\t}\n\n\thandleOnChange = (event) => {\n\t\treturn this.setState({value: event.target.value});\n  \t}\n\t\n\trender(){\n\n\t\treturn (\n\t\t\t<div style = {textFieldStyle}>\n\t\t\t    <TextField\n\t\t\t        id=\"projectName\"\n\t\t\t        label= {this.props.label}\n\t\t\t        value = {this.props.value}\n\t\t\t        margin=\"normal\"\n\t\t\t        onChange = {(e) => this.props.handleOnChange(e.target.value)}>\n\t\t\t   \t</TextField>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst textFieldStyle = {\n\tmargin: '10px'\n}\n\n  \nexport default CustomTextBox;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n\nclass CustomButton extends React.Component{\n\tstate = {\n\t\tlabel : 'Submit'\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t    <Button style = {buttonStyle} variant=\"contained\" color=\"primary\" onClick = {this.props.clickHandle}>\n      \t\t\t\t{this.props.label}\n      \t\t\t</Button>\t\t\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst buttonStyle = {\n\tmargin: '10px'\n}\n\nexport default CustomButton;","import React from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nclass CustomDatePicker extends React.Component{\n\t\n\tstate = {\n\t\tselectedDate: new Date()\n\t}\n\n\thandleDateChange = (e) => {\n\t\tconst date = new Date(this.getFormattedDate(e));\n\t\tthis.props.handleDateChange(date);\n\t\treturn this.setState({selectedDate: date});\n  \t}\n\n  \tgetFormattedDate = (date) => {\n  \t\treturn + date.getFullYear()+ \"-\" + (date.getMonth() + 1)+\"-\"+date.getDate();\n  \t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div style = {datePicketStyle}>\n   \t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n      \t\t\t\t<Grid container  justify=\"space-around\">\n   \t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t          disableToolbar\n\t\t\t\t          variant=\"normal\"\n\t\t\t\t          format=\"dd/MM/yyyy\"\n\t\t\t\t          margin=\"normal\"\n\t\t\t\t          value = {this.state.selectedDate}\n\t\t\t\t          onChange = {this.handleDateChange}\n\t\t\t\t          id={this.props.label}\n\t\t\t\t          label={this.props.label}\n\t\t\t\t    \t   \t\n\t\t\t\t        />\n\t\t\t\t\t</Grid>\n    \t\t\t</MuiPickersUtilsProvider>\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst datePicketStyle = {\n\tmargin: '10px'\n}\nexport default CustomDatePicker;","import React from 'react';\nimport './../App.css';\nimport CustomTextBox from './CustomTextBox';\nimport CustomDatePicker from './CustomDatePicker';\nimport CustomButton from './CustomButton'\n// import CustomList from './CustomList'\n\nclass CustomListItem extends React.Component{\n\n\trender(){\n\t\treturn this.props.itemList.map(item =>(\n\t\t\t<div className='Activity-panel'>\n\n            \t<CustomTextBox styel= {itemStyle} label = {item.activityName}\n                  value = {item.activityValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.activityName)}/>\n\n            \t<CustomDatePicker label = {item.startDate} \n            \thandleDateChange = {(e) => this.props.handleDateChange(e, item, item.startDate)} />\n            \t<CustomDatePicker label = {item.endDate} \n            \thandleDateChange = {(e) => this.props.handleDateChange(e, item, item.endDate)}/>\n            \t\n            \t<CustomTextBox label = {item.duration} value = {item.durationValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.duration)}/>\n            \t\n            \t<CustomTextBox label = {item.activityCost} value = {item.activityCostValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.activityCost)}/>\n\n            \t<CustomButton label = {'Delete'} justify=\"space-around\" \n            \tclickHandle = { this.props.handleDelete.bind(this, item) }/>\n            </div>\n\t\t))\n\t}\n}\n\nconst itemStyle = {\n      margin: '10px 10px 10px 10px',\n      border: '1px'\n}\n\nconst activityTypeList = ['Months', 'Days']\n  \nexport default CustomListItem;","import React from 'react';\n\nclass HeaderPanel extends React.Component{\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t    <h1> EVA Application </h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HeaderPanel;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n//select \nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass CustomList extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\tstate = {\n\t\tselectValue: 'none'\n\t}\n\n\thandleSelectOnChange = (e) =>{\n\t\tthis.props.handleSelectOnChange(e);\n\t\treturn this.setState({selectValue: e.target.value});\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t <div>\n\t\t\t<InputLabel htmlFor=\"Currency\">{this.props.listLabel}</InputLabel>\n\t\t\t<div className = {marginTop}></div>\n\t\t\t<Select  style = {selectStyle}\n\t\t\tvalue={this.state.selectValue}\n\t\t\tonChange = {this.handleSelectOnChange}>\n\t\t\t <MenuItem value=\"none\">\n\t           None\n\t         </MenuItem>\n\t\t\t\t{\n\t\t\t\t\tthis.props.itemList.map(item => (\n\t\t\t\t\t\t<MenuItem value={item}>{item}</MenuItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t        </Select>\n\t        </div>\n\t        \n\t\t)\n\t}\n}\n\nconst marginTop = {\n\theight: '10px',\n\tmarginTop: '100px'\n}\n\nconst selectStyle = {\n\tminWidth:'175px'\n}\n\n\nexport default CustomList;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass CustomChart extends React.Component{\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tconsole.log(\"CustomChart props:\"+props);\n\t}\n\n\tgetChartData =()=> {\n\t\tconst bcwp = this.props.chartData.bcwp;\n\t\tconst bcws = this.props.chartData.bcws;\n\t\tconst acwp = this.props.chartData.acwp;\n\t\tconst max = Math.max(bcwp, bcws, acwp) + 50;\n\t\tconst min = 0;\n\t  return ({\n\t  \tlabels: ['bcws','bcwp', 'acwp'],\n\t\t  datasets: [\n\t\t    {\n\t\t      label: 'EVA Graph',\n\t\t      backgroundColor: 'rgba(255,99,132,0.2)',\n\t\t      borderColor: 'rgba(255,99,132,1)',\n\t\t      borderWidth: 1,\n\t\t      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t      hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t      data: [bcws, bcwp, acwp, min, max]\n\t\t    }\n\t\t  ]\n\t\t})\n\t  }\n\n\t  getReport = () => {\n\t  \tif(this.props.chartData.enableReport) {\n\t\t\t\treturn <div style = {reportStyle}>\n\t\t\t\t\t<Bar\n\t\t\t\t\tdata={this.getChartData()} \n\t\t\t\t\t options={{ maintainAspectRatio: true }}/>\n\t\t\t\t</div>\n\t\t}else{\n\t\t\treturn (null);\n\t\t}\n\t  }\n\n\trender(){\n\t\treturn (\n\t\t\tthis.getReport()\t\t\t\t\t\t\n\t\t);\n\t}\n}\n\nconst reportStyle = {\n\tmaxWidth: '300px',\n\tmaxHeight: '300px'\n}\n\nexport default CustomChart;","import React from 'react';\nimport '../App.css';\nimport CustomButton from '../component/CustomButton';\nimport CustomListItem from '../component/CustomListItem';\nimport HeaderPanel from '../component/HeaderPanel';\nimport CustomDatePicker from '../component/CustomDatePicker';\nimport CustomTextBox from '../component/CustomTextBox';\nimport CustomChart from '../component/CustomChart';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nclass ActivityPage extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tconst projectData = props.projectData;\n\t}\n\n\tstate = {\n\t\titemList : [{\n\t\t\t\tid: Date.now(),\n\t\t\t\tactivityName: 'Activity Name',\n\t\t\t\tactivityValue: '',\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartDateValue: new Date(),\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendDateValue: new Date(),\n\t\t\t\tduration: 'Duration(Days)',\n\t\t\t\tdurationValue: 0,\n\t\t\t\tactivityCost: 'Activity Cost',\n\t\t\t\tactivityCostValue: 0,\n\t\t\t\tactivityType: ''\n\n\t\t\t}],\n\t\tprogressDate : new Date().toString(),\n\t\tprogressList: {\n\t\t\tactivity: '',\n\t\t\tplannedDuration: 0,\n\t\t\tcompleted: '',\n\t\t\tactualCost: '',\n\t\t\tactualDuration: '',\n\t\t\tplannedCost: ''\n\t\t},\n\t\tbcws: 0,\n\t\tbcwp: 0,\n\t\tacwp: 0,\n\t\tcpi: 0,\n\t\tcv: 0,\n\t\tspi: 0,\n\t\tsv: 0,\n\t\tenableReport: false\n\t}\n\t\n\thandleButtonClick = (e) => {\n\t\tthis.addItem();\n\t}\n\n\taddItem = (e) => {\n\t\tthis.setState(state => {\n\t\t\tconst list = state.itemList.push({\n\t\t\t\tid: Date.now(),\n\t\t\t\tactivityName: 'Activity Name',\n\t\t\t\tactivityValue: '',\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartDateValue: new Date().toString(),\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendDateValue: new Date().toString(),\n\t\t\t\tduration: 'Duration(Days)',\n\t\t\t\tdurationValue: 0,\n\t\t\t\tactivityCost: 'Activity Cost',\n\t\t\t\tactivityCostValue: 0,\n\t\t\t\tactivityType: ''\n\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleDelete = (item) => {\n\t\tconsole.log(item);\n\t\tthis.setState({ itemList: [...this.state.itemList.filter(listItem => listItem !== item)]});\t\n\t}\n\n\tshowReport = (e) => {\n\t\treturn this.setState({ enableReport: !this.state.enableReport });\n\t}\n\n\thandleTextViewOnChange = (e) => {\n\t\tthis.setState( {\n\t\t\tproject : e\n\t\t});\n\t}\n\n\thandleOnChange = (e, item, textboxName) => {\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tif(textboxName === 'Activity Name'){\n\t\t\t\t\t\tlistItem.activityValue = e;\n\t\t\t\t\t\tstate.progressList.activity = e;\n\t\t\t\t\t}else if(textboxName === 'Duration'){\n\t\t\t\t\t\tlistItem.durationValue = e;\n\t\t\t\t\t}else if(textboxName === 'Activity Cost'){\n\t\t\t\t\t\tlistItem.activityCostValue = e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleDateChange = (e, item, dateLabel) =>{\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tif(dateLabel === 'Start Date'){\n\t\t\t\t\t\tlistItem.startDateValue = e.toString();\n\t\t\t\t\t}else if(dateLabel === 'End Date'){\n\t\t\t\t\t\tlistItem.endDateValue = e.toString();\t\n\t\t\t\t\t}\n\t\t\t\t\tconst duration = this.getDateDifference(listItem.startDateValue,\n\t\t\t\t\t\tlistItem.endDateValue);\n\t\t\t\t\t\n\t\t\t\t\tlistItem.durationValue = Math.round(duration/(1000 * 3600 * 24)) + 1;\n\t\t\t\t}\n\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\tgetDateDifference = (startDate, endDate) => {\n\t\treturn Date.parse(endDate) - Date.parse(startDate);\n\t}\n\n\thandleSelectOnChange = (e, item) => {\n\t\tconsole.log(e.target.value);\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tlistItem.activityType = e.target.value;\n\t\t\t\t}\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleSingleDate = (e) => {\n\t\tthis.setState(state =>{ \n\t\t\tstate.progressDate = e.toString();\n\t\t});\n\t\t\n\t}\n\n\tupdatePlannedCost = () => {\n\t\tvar plannedCost = (this.state.progressList.plannedDuration / this.getTotalDuration()) * this.getTotalActivityCost();\n\t\tthis.setState(state => {\n\t\t\tconst progressItem = state.progressList;\n\t\t\tprogressItem.plannedCost = plannedCost;\n\t\t\treturn progressItem;\n\t\t} );\n\t}\t\n\n\tgetTotalDuration = () => {\n\t\tvar duration = 0;\n\t\tthis.state.itemList.forEach(item => {\n\t\t\tduration += item.durationValue;\n\t\t});\n\t\treturn duration;\n\t}\n\n\tgetTotalActivityCost = () => {\n\t\tvar cost = 0;\n\t\tthis.state.itemList.forEach(item => {\n\t\t\tcost += parseInt(item.activityCostValue);\n\t\t});\n\t\treturn cost;\n\t}\n\n\tsetPlannedDuration = (e) => {\n\t\tvar duration = 0;\n\t\tthis.state.itemList.forEach(item => {\n\t\t\tduration += item.durationValue;\n\t\t});\n\t\treturn this.setState( state => {\n\t\t\tconst progressItem = state.progressList;\n\t\t\tprogressItem.plannedDuration = duration;\n\t\t\treturn progressItem;\n\t\t});\n\t}\n\n\tgetPlannedDuration = (item) => {\n\t\tconst plannedDurationDiff = this.getDateDifference(this.props.projectData.startDate, this.state.progressDate); \n\t\treturn Math.round(plannedDurationDiff/(1000 * 3600 * 24))\n\t}\n\n\thandleProcess = (e) => {\n\t\tthis.setPlannedDuration();\n\t}\n\n\thandleCheckProgressClick = (e) => {\n\t\tthis.updatePlannedCost();\n\t}\n\n\tfindEvaIndicators = (e) => {\n\t\tthis.setBcws();\n\t\tthis.setBcwp();\n\t\tthis.setAcwp();\n\t\tthis.setCpi();\n\t\tthis.setCv();\n\t\tthis.setSpi();\n\t\tthis.setSv();\n\t}\n\n\tsetBcws = (e) => {\n\t\tconst plannedDuration = this.state.progressList.plannedDuration;\n\t\tconsole.log(\"plannedDuration :\"+plannedDuration);\n\t\t\n\t\tconst totalDuration = this.state.itemList[0].durationValue;\n\t\tconsole.log(\"totalDuration :\"+totalDuration);\n\t\t\n\t\tconst totalCost = this.state.itemList[0].activityCostValue;\n\t\tconsole.log(\"totalCost :\"+totalCost);\n\n\t\tconst bcws = (plannedDuration/totalDuration) * totalCost;\t\n\n\t\tthis.setState({bcws: bcws});\n\t}\n\n\tsetBcwp = () => {\n\t\tconst bcws = this.state.progressList.plannedCost;\n\t\tthis.setState({bcwp: bcws});\t\n\t}\n\n\tsetAcwp = () => {\n\t\tconst acwp = this.state.progressList.actualCost;\n\t\tthis.setState({acwp: acwp});\n\t}\n\n\tsetCpi = () => {\n\t\tconst cpi = this.state.bcwp / this.state.acwp;\t\n\t\tthis.setState({cpi: cpi});\n\t}\n\n\tsetCv = () => {\n\t\tconst cv = this.state.bcwp - this.state.acwp;\t\n\t\tthis.setState({cv: cv});\n\t}\n\n\tsetSpi = () => {\n\t\tconst spi = this.state.bcwp / this.state.acws;\t\n\t\tthis.setState({spi: spi});\n\t}\n\n\tsetSv = () => {\n\t\tconst sv = this.state.bcwp - this.state.acws;\t;\t\n\t\tthis.setState({sv: sv});\n\t}\n\n\thandleCompletedTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.completed = e;\n\t\t});\n\t}\n\n\thandleActualCostTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.actualCost = e;\n\t\t});\n\t}\n\n\thandleActualDurationTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.actualDuration = e;\n\t\t});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className = 'activityLayout'>  \n\n\t\t\t\t<Card style = {customListStyle}>\n\t\t\t\t\t<div>Activity Info</div>\n\t\t            <CustomListItem itemList = {this.state.itemList} \n\t\t            handleDelete = {this.handleDelete}\n\t\t            handleOnChange = {this.handleOnChange}\n\t\t            handleDateChange = {this.handleDateChange}\n\t\t            handleSelectOnChange = {this.handleSelectOnChange}/>\n\n\t\t\t        <CustomButton label = {'Add Activity'} clickHandle={this.handleButtonClick} />\n\t\t        </Card>\n\t\t        \n\t\t        <Card style = {progressPanelStyle}>\n\t\t        \t<div>Check Progress</div>\n\t\t        \t<div style = {{maxWidth: '600px', display: 'inline-block'}}>\n\t\t\t        \t<div className = 'Activity-panel'>\n\t\t\t\t\t         <CustomDatePicker label = {'Check Progress till date'} handleDateChange = {this.handleSingleDate}/>\n\t\t\t\t\t         <CustomButton label = {'Process'} clickHandle={this.handleProcess} />\t\n\t\t\t\t\t         <CustomButton label = {'Check Progress'} clickHandle={this.handleCheckProgressClick} />     \n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        </Card>\n\n\t\t        <Card style = {customListStyle}>\n\t\t        \t<div>Progress Info</div>\n\t\t\t         <div className='Activity-panel'>\n\t\t\t         \t<CustomTextBox label = {'Planned Duration'} value = {this.state.progressList.plannedDuration}\n\t\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\n\t\t\t         \t<CustomTextBox label = {'% Completed'} handleOnChange = {this.handleCompletedTextChange}/>\n\t\t\t         \t<CustomTextBox label = {'Actual Cost'} handleOnChange = {this.handleActualCostTextChange}/>\n\t\t\t         \t<CustomTextBox label = {'Actual Duration'} handleOnChange = {this.handleActualDurationTextChange}/>\n\t\t\t         \t<CustomTextBox label = {'Planned Cost'} value = {this.state.progressList.plannedCost} \n\t\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\t\n\t\t\t         </div>\n\t\t         </Card>\n\n\t\t         <CustomButton style = {{maxWidth: '600px', display: 'inline-block'}} label = {'Find EVA Indicators'} clickHandle={this.findEvaIndicators} />\n\t\t\t        <Card style = {evaIndicatorStyle}>\n\t\t\t        \t<div>EVA Indicators</div>\n\t\t\t\t         <div className='Activity-panel'>\t\n\n\t\t\t\t\t         <CustomTextBox label = {'bcws'} \n\t\t\t\t\t         value = {this.state.bcws}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'bcwp'} \n\t\t\t\t\t         value = {this.state.bcwp}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'acwp'} \n\t\t\t\t\t         value = {this.state.acwp}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'cpi'} \n\t\t\t\t\t         value = {this.state.cpi}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'cv'} \n\t\t\t\t\t         value = {this.state.cv}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'spi'} \n\t\t\t\t\t         value = {this.state.spi}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t\t         <CustomTextBox label = {'sv'} \n\t\t\t\t\t         value = {this.state.sv}\n\t\t\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t\t         </div>\n\t\t\t         </Card>\n\t\t\t     <CustomButton label = {'Display Chart'} clickHandle={this.showReport} />\n\t\t\t     <Card style = {evaIndicatorStyle}>\n\t\t\t     \t<div style = {{width: '300px', height: '100%',display: 'inline-block'}}>\n\t\t\t     \t\t<CustomChart chartData = {this.state}/>\n\t\t\t     \t</div>\n\t\t\t     </Card>\n\t\t\t         \n\t\t        \n\t      \t</div>\n\t\t      \n\t\t);\n\t}\n}\n\nconst customListStyle = {\n\t\tmarginTop: '10px',\n\t    display: 'inline-block',\n\t\tmaxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around'\n}\n\nconst evaIndicatorStyle = {\n\t    display: 'inline-block',\n\t    maxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center'\n}\nconst progressPanelStyle = {\n\t\tmarginTop: '10px',\n\t    display: 'inline-block',\n\t\tmaxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center'\n}\n\nconst activityLayout = {\n\t\tmarginTop: '10px',\n\t    display: 'inline-block',\n\t\tmaxWidth: '1250px',\n\t\tpadding: '10px 10px 10px 10px',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center'\n}\n\n\n\nexport default ActivityPage;\n","import React from 'react';\nimport './App.css';\nimport CustomTextBox from './component/CustomTextBox';\nimport CustomButton from './component/CustomButton';\nimport CustomDatePicker from './component/CustomDatePicker';\nimport CustomListItem from './component/CustomListItem';\nimport HeaderPanel from './component/HeaderPanel';\n\nimport CustomList from './component/CustomList';\nimport ActivityPage from './pages/ActivityPage';\n// list\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// card\nimport Card from '@material-ui/core/Card';\n\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tproject : '',\n\t\tcurrency : '',\n\t\tstartDate: new Date().toString()\n\t}\n\n\t\n\thandleTextViewOnChange = (e) => {\n\t\treturn this.setState( {\n\t\t\tproject : e\n\t\t});\n\t}\n\n\thandleDateChange = (e) =>{\n\t\tconsole.log(e);\n\t\treturn this.setState( {\n\t\t\tstartDate : e.toString()\n\t\t});\n\t}\n\n\thandleSelectOnChange = (e) => {\n\t\treturn this.setState({currency: e.target.value});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t\n\t\t      <div className='App'>\t\t      \t\t\n\t\t\t  \t<HeaderPanel />\n\t\t    \t<Router>\n\t\t\t        <Route exact path = '/EVA-App' render = {props => (\n\t\t\t        \t<div style = {topPanelStyle}>\n\t\t      \t\t\t<Card style = {cardStyle}>\n\t\t\t\t        \t<React.Fragment>\n\t\t\t\t        \t\t<div className='App-header'>\n\t\t\t\t\t            <CustomTextBox label = {'Project Name'} handleOnChange = {this.handleTextViewOnChange}/>\n\t\t\t\t\t            <CustomList itemList = {currencyList} listLabel = {'Currency'} style = {currencyStyle}\n\t\t\t\t\t            handleSelectOnChange = {this.handleSelectOnChange} />\n\t\t\t\t\t            <CustomDatePicker label = {'Start Date'} handleDateChange = {this.handleDateChange}/>\n\t\t\t\t\t            <Link to='/EVA-App/activity' >\n\t\t\t\t\t            \t<CustomButton label = {'Next'} />\n\t\t\t\t\t            </Link>\n\t\t\t\t        \t\t</div>\n\t\t\t\t        \t</React.Fragment>\t\n\t\t\t        \t</Card>\n\t\t        \t\t</div>\n\t\t\t        )}/>\n\t\t        \t<Route exact path = '/EVA-App/activity' \n\t\t        \t\trender = {(props) => <ActivityPage {...props} projectData = {this.state}/>} />\n\t        \t</Router>\t\t        \n\t\t      </div>\n\t\t      \n\t\t);\n\t}\n}\nconst currencyList = ['INR','USD'];\n\nconst cardStyle = {\n\twidth: '400px',\n\tminWidth: '300px',\n\tmaxHeight: '400px',\n\t\n}\nconst currencyStyle = {\n\twidth: '200px'\n}\n\nconst topPanelStyle = {\n\ttextAlign: 'center',\n\tdisplay: 'inline-block'\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CustomTextBox from './component/CustomTextBox';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}