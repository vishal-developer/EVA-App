{"version":3,"sources":["component/CustomTextBox.js","component/CustomButton.js","component/CustomDatePicker.js","component/CustomList.js","component/CustomListItem.js","component/HeaderPanel.js","component/CustomChart.js","pages/ActivityPage.js","App.js","index.js"],"names":["CustomTextBox","state","label","value","handleOnChange","event","setState","target","console","log","props","TextField","id","this","margin","onChange","e","React","Component","CustomButton","Button","variant","color","onClick","clickHandle","CustomDatePicker","selectedDate","Date","handleDateChange","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","CustomList","selectValue","handleSelectOnChange","InputLabel","htmlFor","listLabel","className","marginTop","Select","MenuItem","itemList","map","item","height","CustomListItem","activityTypeList","activityName","activityValue","startDate","endDate","duration","durationValue","activityCost","activityCostValue","handleDelete","bind","HeaderPanel","CustomChart","style","reportStyle","data","width","options","maintainAspectRatio","maxWidth","maxHeight","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","ActivityPage","now","startDateValue","toString","endDateValue","activityType","progressDate","progressList","activity","plannedDuration","completed","actualCost","actualDuration","plannedCost","bcws","bcwp","acwp","cpi","cv","spi","sv","handleButtonClick","addItem","list","push","filter","listItem","showReport","handleTextViewOnChange","project","textboxName","dateLabel","getDateDifference","Math","round","parse","handleSingleDate","updatePlannedCost","progressItem","setPlannedDuration","plannedDurationDiff","handleProcess","handleCheckProgressClick","findEvaIndicators","setBcws","setBcwp","setAcwp","setCpi","setCv","setSpi","setSv","totalDuration","totalCost","acws","handleCompletedTextChange","handleActualCostTextChange","handleActualDurationTextChange","projectData","App","currency","exact","path","render","topPanelStyle","Card","cardStyle","Fragment","currencyList","to","component","textAlign","display","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1377c7c5.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass CustomTextBox extends React.Component{\n\t\n\tconstructor(){\n\t\tsuper();\n\t\tconsole.log(this.props);\n\t\t\n\t}\n\tstate = {\n\t\tlabel: '',\n\t\tvalue: ''\n\t}\n\n\thandleOnChange = (event) => {\n\t\treturn this.setState({value: event.target.value});\n  \t}\n\t\n\trender(){\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t    <TextField\n\t\t\t        id=\"projectName\"\n\t\t\t        label= {this.props.label}\n\t\t\t        value = {this.props.value}\n\t\t\t        margin=\"normal\"\n\t\t\t        onChange = {(e) => this.props.handleOnChange(e.target.value)}>\n\t\t\t   \t</TextField>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \nexport default CustomTextBox;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n\nclass CustomButton extends React.Component{\n\tstate = {\n\t\tlabel : 'Submit'\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div> &nbsp;</div>\n\t\t\t    <Button variant=\"contained\" color=\"primary\" onClick = {this.props.clickHandle}>\n      \t\t\t\t{this.props.label}\n      \t\t\t</Button>\t\t\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default CustomButton;","import React from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nclass CustomDatePicker extends React.Component{\n\t\n\tstate = {\n\t\tselectedDate: new Date()\n\t}\n\n\thandleDateChange = (e) => {\n\t\tthis.props.handleDateChange(e);\n\t\treturn this.setState({selectedDate: e});\n  \t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div>\n   \t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n      \t\t\t\t<Grid container  justify=\"space-around\">\n   \t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t          disableToolbar\n\t\t\t\t          variant=\"normal\"\n\t\t\t\t          format=\"MM/dd/yyyy\"\n\t\t\t\t          margin=\"normal\"\n\t\t\t\t          value = {this.state.selectedDate}\n\t\t\t\t          onChange = {this.handleDateChange}\n\t\t\t\t          id={this.props.label}\n\t\t\t\t          label={this.props.label}\n\t\t\t\t    \t   \t\n\t\t\t\t        />\n\t\t\t\t\t</Grid>\n    \t\t\t</MuiPickersUtilsProvider>\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default CustomDatePicker;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n//select \nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\n\n\nclass CustomList extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\tstate = {\n\t\tselectValue: 'none'\n\t}\n\n\thandleSelectOnChange = (e) =>{\n\t\tthis.props.handleSelectOnChange(e);\n\t\treturn this.setState({selectValue: e.target.value});\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t <div>\n\t\t\t<InputLabel htmlFor=\"Currency\">{this.props.listLabel}</InputLabel>\n\t\t\t<div className = {marginTop}></div>\n\t\t\t<Select \n\t\t\tvalue={this.state.selectValue}\n\t\t\tonChange = {this.handleSelectOnChange}>\n\t\t\t <MenuItem value=\"none\">\n\t           None\n\t         </MenuItem>\n\t\t\t\t{\n\t\t\t\t\tthis.props.itemList.map(item => (\n\t\t\t\t\t\t<MenuItem value={item}>{item}</MenuItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t        </Select>\n\t        </div>\n\t        \n\t\t)\n\t}\n}\n\nconst marginTop = {\n\theight: '10px',\n\tmarginTop: '100px'\n}\n\n\nexport default CustomList;","import React from 'react';\nimport './../App.css';\nimport CustomTextBox from './CustomTextBox';\nimport CustomDatePicker from './CustomDatePicker';\nimport CustomButton from './CustomButton'\nimport CustomList from './CustomList'\n\nclass CustomListItem extends React.Component{\n\n\trender(){\n\t\treturn this.props.itemList.map(item =>(\n\t\t\t<div className='Activity-panel'>\n\n                  <CustomList itemList = {activityTypeList} \n                  listLabel = {'Activity Type'} \n                  handleSelectOnChange = {(e) => this.props.handleSelectOnChange(e, item)} />\n\n            \t<CustomTextBox label = {item.activityName}\n                  value = {item.activityValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.activityName)}/>\n\n            \t<CustomDatePicker label = {item.startDate} \n            \thandleDateChange = {(e) => this.props.handleDateChange(e, item, item.startDate)} />\n            \t<CustomDatePicker label = {item.endDate} \n            \thandleDateChange = {(e) => this.props.handleDateChange(e, item, item.endDate)}/>\n            \t\n            \t<CustomTextBox label = {item.duration} value = {item.durationValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.duration)}/>\n            \t\n            \t<CustomTextBox label = {item.activityCost} value = {item.activityCostValue}\n            \thandleOnChange = {(e) => this.props.handleOnChange(e, item, item.activityCost)}/>\n\n            \t<CustomButton label = {'Delete'} justify=\"space-around\" \n            \tclickHandle = { this.props.handleDelete.bind(this, item) }/>\n            </div>\n\t\t))\n\t}\n}\n\nconst activityTypeList = ['Months', 'Days']\n  \nexport default CustomListItem;","import React from 'react';\n\nclass HeaderPanel extends React.Component{\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t    <h1> EVA Application </h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HeaderPanel;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass CustomChart extends React.Component{\n\n\trender(){\n\t\treturn (\n\t\t\t<div style = {reportStyle}>\n\t\t\t\t<Bar\n\t\t\t\tdata={data} \n\t\t\t\t width={20}\n\t\t\t\t  height={20}\n\t\t\t\t  options={{ maintainAspectRatio: true }}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst reportStyle = {\n\tmaxWidth: '300px',\n\tmaxHeight: '300px'\n\t\n}\n\nconst data = {\n  labels: ['acws', 'bcws', 'bcsp'],\n  datasets: [\n    {\n      label: 'EVA Graph',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [65, 59, 80]\n    }\n  ]\n};\n\nexport default CustomChart;","import React from 'react';\nimport '../App.css';\nimport CustomButton from '../component/CustomButton';\nimport CustomListItem from '../component/CustomListItem';\nimport HeaderPanel from '../component/HeaderPanel';\nimport CustomDatePicker from '../component/CustomDatePicker';\nimport CustomTextBox from '../component/CustomTextBox';\nimport CustomChart from '../component/CustomChart';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nclass ActivityPage extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tconst projectData = props.projectData;\n\t\tconsole.log('projectData :'+projectData);\n\t}\n\n\tstate = {\n\t\titemList : [{\n\t\t\t\tid: Date.now(),\n\t\t\t\tactivityName: 'Activity Name',\n\t\t\t\tactivityValue: '',\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartDateValue: new Date().toString(),\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendDateValue: new Date().toString(),\n\t\t\t\tduration: 'Duration(Days)',\n\t\t\t\tdurationValue: 0,\n\t\t\t\tactivityCost: 'Activity Cost',\n\t\t\t\tactivityCostValue: 0,\n\t\t\t\tactivityType: ''\n\n\t\t\t}],\n\t\tprogressDate : new Date().toString(),\n\t\tprogressList: {\n\t\t\tactivity: '',\n\t\t\tplannedDuration: 0,\n\t\t\tcompleted: '',\n\t\t\tactualCost: '',\n\t\t\tactualDuration: '',\n\t\t\tplannedCost: ''\n\t\t},\n\t\tbcws: 0,\n\t\tbcwp: 0,\n\t\tacwp: 0,\n\t\tcpi: 0,\n\t\tcv: 0,\n\t\tspi: 0,\n\t\tsv: 0\n\t}\n\t\n\thandleButtonClick = (e) => {\n\t\tthis.addItem();\n\t}\n\n\taddItem = (e) => {\n\t\tthis.setState(state => {\n\t\t\tconst list = state.itemList.push({\n\t\t\t\tid: Date.now(),\n\t\t\t\tactivityName: 'Activity Name',\n\t\t\t\tactivityValue: '',\n\t\t\t\tstartDate: 'Start Date',\n\t\t\t\tstartDateValue: new Date().toString(),\n\t\t\t\tendDate: 'End Date',\n\t\t\t\tendDateValue: new Date().toString(),\n\t\t\t\tduration: 'Duration(Days)',\n\t\t\t\tdurationValue: 0,\n\t\t\t\tactivityCost: 'Activity Cost',\n\t\t\t\tactivityCostValue: 0,\n\t\t\t\tactivityType: ''\n\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleDelete = (item) => {\n\t\tconsole.log(item);\n\t\tthis.setState({ itemList: [...this.state.itemList.filter(listItem => listItem !== item)]});\t\n\t}\n\n\tshowReport = (e) => {\n\t\tconsole.log(this.state);\n\t}\n\n\thandleTextViewOnChange = (e) => {\n\t\tthis.setState( {\n\t\t\tproject : e\n\t\t});\n\t}\n\n\thandleOnChange = (e, item, textboxName) => {\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tif(textboxName === 'Activity Name'){\n\t\t\t\t\t\tlistItem.activityValue = e;\n\t\t\t\t\t\tstate.progressList.activity = e;\n\t\t\t\t\t}else if(textboxName === 'Duration'){\n\t\t\t\t\t\tlistItem.durationValue = e;\n\t\t\t\t\t}else if(textboxName === 'Activity Cost'){\n\t\t\t\t\t\tlistItem.activityCostValue = e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleDateChange = (e, item, dateLabel) =>{\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tif(dateLabel === 'Start Date'){\n\t\t\t\t\t\tlistItem.startDateValue = e.toString();\n\t\t\t\t\t}else if(dateLabel === 'End Date'){\n\t\t\t\t\t\tlistItem.endDateValue = e.toString();\t\n\t\t\t\t\t}\n\t\t\t\t\tconst duration = this.getDateDifference(listItem.startDateValue,\n\t\t\t\t\t\tlistItem.endDateValue);\n\t\t\t\t\t\n\t\t\t\t\tlistItem.durationValue = Math.round(duration/(1000 * 3600 * 24));\n\t\t\t\t}\n\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\tgetDateDifference = (startDate, endDate) => {\n\t\treturn Date.parse(endDate) - Date.parse(startDate);\n\t}\n\n\thandleSelectOnChange = (e, item) => {\n\t\tconsole.log(e.target.value);\n\t\tthis.setState( state => {\n\t\t\tconst list = state.itemList.map((listItem) =>{\n\t\t\t\tif(listItem === item){\n\t\t\t\t\tlistItem.activityType = e.target.value;\n\t\t\t\t}\n\t\t\t\treturn listItem;\n\t\t\t});\n\t\t\treturn {list};\n\t\t});\n\t}\n\n\thandleSingleDate = (e) => {\n\t\tthis.setState(state =>{ \n\t\t\tstate.progressDate = e.toString();\n\t\t});\n\t\t\n\t}\n\n\tupdatePlannedCost = (item) => {\n\t\tvar plannedCost = (this.state.progressList.plannedDuration / item.durationValue) * item.activityCostValue;\n\t\tthis.setState(state => {\n\t\t\tconst progressItem = state.progressList;\n\t\t\tprogressItem.plannedCost = plannedCost;\n\t\t\treturn progressItem;\n\t\t} );\n\t}\t\n\n\tsetPlannedDuration = (item) => {\n\t\tconst plannedDurationDiff = this.getDateDifference(item.startDateValue, this.state.progressDate); \n\t\tconst duration = Math.round(plannedDurationDiff/(1000 * 3600 * 24))\n\t\treturn this.setState( state => {\n\t\t\tconst progressItem = state.progressList;\n\t\t\tprogressItem.plannedDuration = duration;\n\t\t\treturn progressItem;\n\t\t});\n\t}\n\n\thandleProcess = (e) => {\n\t\tconst item = this.state.itemList[0];\n\t\tthis.setPlannedDuration(item);\n\t}\n\n\thandleCheckProgressClick = (e) => {\n\t\tconst item = this.state.itemList[0];\n\t\tthis.updatePlannedCost(item);\n\t}\n\n\tfindEvaIndicators = (e) => {\n\t\tthis.setBcws();\n\t\tthis.setBcwp();\n\t\tthis.setAcwp();\n\t\tthis.setCpi();\n\t\tthis.setCv();\n\t\tthis.setSpi();\n\t\tthis.setSv();\n\t}\n\n\tsetBcws = (e) => {\n\t\tconst plannedDuration = this.state.progressList.plannedDuration;\n\t\tconsole.log(\"plannedDuration :\"+plannedDuration);\n\t\t\n\t\tconst totalDuration = this.state.itemList[0].durationValue;\n\t\tconsole.log(\"totalDuration :\"+totalDuration);\n\t\t\n\t\tconst totalCost = this.state.itemList[0].activityCostValue;\n\t\tconsole.log(\"totalCost :\"+totalCost);\n\n\t\tconst bcws = (plannedDuration/totalDuration) * totalCost;\t\n\n\t\tthis.setState({bcws: bcws});\n\t}\n\n\tsetBcwp = () => {\n\t\tconst bcws = this.state.progressList.plannedCost;\n\t\tthis.setState({bcwp: bcws});\t\n\t}\n\n\tsetAcwp = () => {\n\t\tconst acwp = this.state.progressList.actualCost;\n\t\tthis.setState({acwp: acwp});\n\t}\n\n\tsetCpi = () => {\n\t\tconst cpi = this.state.bcwp / this.state.acwp;\t\n\t\tthis.setState({cpi: cpi});\n\t}\n\n\tsetCv = () => {\n\t\tconst cv = this.state.bcwp - this.state.acwp;\t\n\t\tthis.setState({cv: cv});\n\t}\n\n\tsetSpi = () => {\n\t\tconst spi = this.state.bcwp / this.state.acws;\t\n\t\tthis.setState({spi: spi});\n\t}\n\n\tsetSv = () => {\n\t\tconst sv = this.state.bcwp - this.state.acws;\t;\t\n\t\tthis.setState({sv: sv});\n\t}\n\n\thandleCompletedTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.completed = e;\n\t\t});\n\t}\n\n\thandleActualCostTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.actualCost = e;\n\t\t});\n\t}\n\n\thandleActualDurationTextChange = (e) => {\n\t\tthis.setState(state => {\n\t\t\treturn state.progressList.actualDuration = e;\n\t\t});\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div className='App'>  \n\t            <CustomListItem itemList = {this.state.itemList} \n\t            handleDelete = {this.handleDelete}\n\t            handleOnChange = {this.handleOnChange}\n\t            handleDateChange = {this.handleDateChange}\n\t            handleSelectOnChange = {this.handleSelectOnChange}/>\n\n\t\t        <CustomButton label = {'Add Activity'} clickHandle={this.handleButtonClick} />\n\t\t        \n\t\t        <div className='Activity-panel'>\n\t\t\t         <CustomDatePicker label = {'Check Progress till date'} handleDateChange = {this.handleSingleDate}/>\n\t\t\t         <CustomButton label = {'Process'} clickHandle={this.handleProcess} />\t\n\t\t\t         <CustomButton label = {'Check Progress'} clickHandle={this.handleCheckProgressClick} />\n\t\t        </div>\n\t\t         <div className='Activity-panel'>\n\t\t         \t<CustomTextBox label = {'Activity Name'} value = {this.state.progressList.activity}\n\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\n\t\t         \t<CustomTextBox label = {'Planned Duration'} value = {this.state.progressList.plannedDuration}\n\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\n\t\t         \t<CustomTextBox label = {'% Completed'} handleOnChange = {this.handleCompletedTextChange}/>\n\t\t         \t<CustomTextBox label = {'Actual Cost'} handleOnChange = {this.handleActualCostTextChange}/>\n\t\t         \t<CustomTextBox label = {'Actual Duration'} handleOnChange = {this.handleActualDurationTextChange}/>\n\t\t         \t<CustomTextBox label = {'Planned Cost'} value = {this.state.progressList.plannedCost} \n\t\t         \thandleOnChange = {this.handleTextViewOnChange}/>\t\n\t\t         </div>\n\n\t\t         <CustomButton label = {'Find EVA Indicators'} clickHandle={this.findEvaIndicators} />\n\t\t        \n\t\t         <div className='Activity-panel'>\t\n\n\t\t\t         <CustomTextBox label = {'bcws'} \n\t\t\t         value = {this.state.bcws}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t         <CustomTextBox label = {'bcwp'} \n\t\t\t         value = {this.state.bcwp}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t         <CustomTextBox label = {'acwp'} \n\t\t\t         value = {this.state.acwp}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t         <CustomTextBox label = {'cpi'} \n\t\t\t         value = {this.state.cpi}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t         <CustomTextBox label = {'cv'} \n\t\t\t         value = {this.state.cv}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t         <CustomTextBox label = {'spi'} \n\t\t\t         value = {this.state.spi}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t\t         <CustomTextBox label = {'sv'} \n\t\t\t         value = {this.state.sv}\n\t\t\t         handleOnChange = {this.handleTextViewOnChange}/>\n\n\t\t         </div>\n\t\t\t     <CustomButton label = {'Display Chart'} clickHandle={this.showReport} />\n\t\t\t     <CustomChart />\n\t\t\t         \n\t\t        \n\t      \t</div>\n\t\t      \n\t\t);\n\t}\n}\n\nexport default ActivityPage;\n","import React from 'react';\nimport './App.css';\nimport CustomTextBox from './component/CustomTextBox';\nimport CustomButton from './component/CustomButton';\nimport CustomDatePicker from './component/CustomDatePicker';\nimport CustomListItem from './component/CustomListItem';\nimport HeaderPanel from './component/HeaderPanel';\n\nimport CustomList from './component/CustomList';\nimport ActivityPage from './pages/ActivityPage';\n// list\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// card\nimport Card from '@material-ui/core/Card';\n\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tproject : '',\n\t\tcurrency : '',\n\t\tstartDate: new Date().toString()\n\t}\n\n\t\n\thandleTextViewOnChange = (e) => {\n\t\treturn this.setState( {\n\t\t\tproject : e\n\t\t});\n\t}\n\n\thandleDateChange = (e) =>{\n\t\tconsole.log(e);\n\t\treturn this.setState( {\n\t\t\tstartDate : e.toString()\n\t\t});\n\t}\n\n\thandleSelectOnChange = (e) => {\n\t\treturn this.setState({currency: e.target.value});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t\n\t\t      <div className='App'>\n\n\t\t      \t\t\n\t\t\t        <HeaderPanel />\n\t\t\t        <Router>\n\t\t\t       \n\t\t\t        <Route exact path = '/' render = {props => (\n\t\t\t        \t<div style = {topPanelStyle}>\n\t\t      \t\t\t<Card style = {cardStyle}>\n\t\t\t\t        \t<React.Fragment>\n\t\t\t\t        \t\t<div className='App-header'>\n\t\t\t\t\t            <CustomTextBox label = {'Project Name'} handleOnChange = {this.handleTextViewOnChange}/>\n\t\t\t\t\t            <CustomList itemList = {currencyList} listLabel = {'Currency'}\n\t\t\t\t\t            handleSelectOnChange = {this.handleSelectOnChange} />\n\t\t\t\t\t            <CustomDatePicker label = {'Start Date'} handleDateChange = {this.handleDateChange}/>\n\t\t\t\t\t            <Link to='/activity' projectData = {this.state}>\n\t\t\t\t\t            \t<CustomButton label = {'Next'} />\n\t\t\t\t\t            </Link>\n\t\t\t\t        \t\t</div>\n\t\t\t\t        \t</React.Fragment>\t\n\t\t\t        \t</Card>\n\t\t        \t\t</div>\n\t\t\t        )}/>\n\t\t\t        \n\n\t\t        <Route exact path = '/activity' component = {ActivityPage}/>\n\t\t        </Router>\n\t\t       \n\t\t        \n\t\t       </div>\n\t\t      \n\t\t);\n\t}\n}\nconst currencyList = ['INR','USD'];\n\nconst cardStyle = {\n\tmaxWidth: '400px',\n\tmaxHeight: '400px'\n}\n\nconst topPanelStyle = {\n\ttextAlign: 'center',\n\tdisplay: 'inline-block'\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CustomTextBox from './component/CustomTextBox';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}